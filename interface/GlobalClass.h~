#ifndef __GLOBALCLASS__
#define __GLOBALCLASS__

#include "ntuple.h"
#include "TChain.h"
#include "TFile.h"
#include "TH1D.h"
#include "ParameterConfig_SM.h"

class GlobalClass{
 public:
  GlobalClass();
  ~GlobalClass();

  int getNjets();
  float getMjj();
  float getJdeta();
  float getMT();
  float getMT2();
  float getMTTOT();
  float CalcJdeta();
  float CalcHPt();

  int Baseline(TString sign, TString cat);
  int passMTCut();
  int passIso(TString type);
  int Vetos();
  int CategorySelection(TString cat, TString mtcut = "");

  int jet2_mvis();
  int VBF_low(TString mtcut = "");
  int VBF_high(TString mtcut = "");
  int Jet1_low(TString mtcut = "");
  int Jet1_high(TString mtcut = "");
  int Jet0_low(TString mtcut = "");
  int Jet0_high(TString mtcut = "");
  int Jet0(TString mtcut = "");
  int Boosted(TString mtcut = "");
  int VBF(TString mtcut = "");
  int PUJetIdSelection(TString wp);
  float PUIdCutParamsTight(float eta);
  float PUIdCutParamsMedium(float eta);
  float PUIdCutParamsLoose(float eta);

  TH1D* GetHistbyName(TString name, TString strVar="");
  TH1D* JITHistoCreator(TString name, TString strVar);
  void returnBinning(double*, vector<double> input);
  int returnBins(vector<double> input);
  TH1D* getBinnedHisto(TString name,vector<double> input);

  vector<TH1D*> histos;
  vector<TString> histo_names = {};

  ntuple *NtupleView;
  Int_t isJEC=0; //0->no correction; 1->jecUp; -1->jecDown;
};



#endif
